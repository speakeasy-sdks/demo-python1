"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import runperf as components_runperf
from .validationresult import ValidationResult
from dataclasses_json import Undefined, dataclass_json
from dataservice import utils
from typing import List, Optional


@dataclasses.dataclass
class Metrics:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class FailedEvaluationResult(Exception):
    metrics: List[Metrics] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metrics') }})
    validation_results: ValidationResult = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validation_results') }})
    perf_info: Optional[components_runperf.RunPerf] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('perf_info') }})
    

    def __str__(self) -> str:
        return utils.marshal_json(self, type(self))
