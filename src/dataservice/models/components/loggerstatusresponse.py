"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from dataservice import utils
from typing import List


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LoggerStatusResponse:
    dataset_timestamps: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataset_timestamps') }})
    dataset_profiles: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataset_profiles') }})
    segment_caches: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segment_caches') }})
    writers: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('writers') }})
    pending_writables: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pending_writables') }})
    pending_views: List[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pending_views') }})
    views: List[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('views') }})
    

